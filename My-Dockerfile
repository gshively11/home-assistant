FROM resin/rpi-raspbian
MAINTAINER Grant Shively <gshively11@gmail.com>

# Install Python 3 and dependencies

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8
# install dbus-python dependencies
RUN apt-get update \
  && apt-get install -y -q --no-install-recommends \
    libdbus-1-dev \
    libdbus-glib-1-dev \
  && apt-get clean \
  && rm -r /var/lib/apt/lists/*
# import gpg keys
RUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D
# key 63C7CC90: public key "Simon McVittie <smcv@pseudorandom.co.uk>" imported
RUN gpg --keyserver keyring.debian.org --recv-keys 4DE8FF2A63C7CC90
# key 3372DCFA: public key "Donald Stufft (dstufft) <donald@stufft.io>" imported
RUN gpg --keyserver pgp.mit.edu  --recv-key 6E3CBCE93372DCFA
ENV PYTHON_VERSION 3.5.1
# if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
ENV PYTHON_PIP_VERSION 8.0.3
ENV SETUPTOOLS_SHA256 24fcfc15364a9fe09a220f37d2dcedc849795e3de3e4b393ee988e66a9cbd85a
ENV SETUPTOOLS_VERSION 20.2.2
RUN set -x \
  && mkdir -p /usr/src/python \
  && curl -SL "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" -o python.tar.xz \
  && curl -SL "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" -o python.tar.xz.asc \
  && gpg --verify python.tar.xz.asc \
  && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
  && rm python.tar.xz* \
  && cd /usr/src/python \
  && ./configure --enable-shared --enable-unicode=ucs4 \
  && make -j$(nproc) \
  && make install \
  && ldconfig \
  && mkdir -p /usr/src/python/setuptools \
  && curl -SLO https://pypi.python.org/packages/source/s/setuptools/setuptools-$SETUPTOOLS_VERSION.tar.gz \
  && echo "$SETUPTOOLS_SHA256  setuptools-$SETUPTOOLS_VERSION.tar.gz" > setuptools-$SETUPTOOLS_VERSION.tar.gz.sha256sum \
  && sha256sum -c setuptools-$SETUPTOOLS_VERSION.tar.gz.sha256sum \
  && tar -xzC /usr/src/python/setuptools --strip-components=1 -f setuptools-$SETUPTOOLS_VERSION.tar.gz \
  && cd /usr/src/python/setuptools \
  && python3 ez_setup.py \
  && mkdir -p /usr/src/python/pip \
  && curl -SL "https://pypi.python.org/packages/source/p/pip/pip-$PYTHON_PIP_VERSION.tar.gz" -o pip.tar.gz \
  && curl -SL "https://pypi.python.org/packages/source/p/pip/pip-$PYTHON_PIP_VERSION.tar.gz.asc" -o pip.tar.gz.asc \
  && gpg --verify pip.tar.gz.asc \
  && tar -xzC /usr/src/python/pip --strip-components=1 -f pip.tar.gz \
  && rm pip.tar.gz* \
  && cd /usr/src/python/pip \
  && python3 setup.py install \
  && cd .. \
  && find /usr/local \
    \( -type d -a -name test -o -name tests \) \
    -o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
    -exec rm -rf '{}' + \
  && cd / \
  && rm -rf /usr/src/python
ENV PYTHON_DBUS_VERSION 1.2.0
# install dbus-python
RUN set -x \
  && mkdir -p /usr/src/dbus-python \
  && curl -SL "http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz" -o dbus-python.tar.gz \
  && curl -SL "http://dbus.freedesktop.org/releases/dbus-python/dbus-python-$PYTHON_DBUS_VERSION.tar.gz.asc" -o dbus-python.tar.gz.asc \
  && gpg --verify dbus-python.tar.gz.asc \
  && tar -xzC /usr/src/dbus-python --strip-components=1 -f dbus-python.tar.gz \
  && rm dbus-python.tar.gz* \
  && cd /usr/src/dbus-python \
  && PYTHON=python3.5 ./configure \
  && make \
  && make install \
  && cd / \
  && rm -rf /usr/src/dbus-python
# make some useful symlinks that are expected to exist
RUN cd /usr/local/bin \
  && ln -sf pip3 pip \
  && ln -sf easy_install-3.5 easy_install \
  && ln -sf idle3 idle \
  && ln -sf pydoc3 pydoc \
  && ln -sf python3 python \
  && ln -sf python-config3 python-config
ENV PYTHONPATH /usr/lib/python3/dist-packages

# Install Home Assistant

# Uncomment any of the following lines to disable the installation.
ENV INSTALL_TELLSTICK no
#ENV INSTALL_OPENALPR no
#ENV INSTALL_FFMPEG no
#ENV INSTALL_OPENZWAVE no
ENV INSTALL_LIBCEC no
ENV INSTALL_PHANTOMJS no

VOLUME /config

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# Copy build scripts
COPY virtualization/Docker/ virtualization/Docker/
RUN virtualization/Docker/setup_docker_prereqs

# Install hass component dependencies
COPY requirements_all.txt requirements_all.txt
RUN pip3 install --no-cache-dir -r requirements_all.txt && \
    pip3 install --no-cache-dir mysqlclient psycopg2 uvloop

# Copy source
COPY . .

# Putting custom stuff after home-assistant build because it takes forever

# Install nginx

RUN apt-get update \
  && apt-get install -y -q --no-install-recommends \
    ca-certificates \
    nginx \
    wget \
  && apt-get clean \
  && rm -r /var/lib/apt/lists/*
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
  && ln -sf /dev/stderr /var/log/nginx/error.log
COPY my-config/nginx-home-assistant /etc/nginx/sites-available/home-assistant

# Install letsencrypt

RUN echo "deb http://httpredir.debian.org/debian jessie-backports main contrib non-free" \
  > /etc/apt/sources.list.d/debian-jessie-backports.list \
  && apt-get update -y \
  && apt install letsencrypt -t jessie-backports -y \
  && rm /etc/apt/sources.list.d/debian-jessie-backports.list \
  && apt-get update -y \
  && apt-get clean \
  && rm -r /var/lib/apt/lists/*
# Setup a weeklky cron to attempt renewal of ssl certs (only renews if expiring within 30 days)
COPY my-scripts/letsencrypt-renew.sh /etc/cron.weekly/letsencrypt

ENTRYPOINT /usr/src/app/my-docker-entrypoint.sh

EXPOSE 80 443
